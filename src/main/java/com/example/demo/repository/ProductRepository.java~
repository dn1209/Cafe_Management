package com.example.demo.repository;

import com.example.demo.model.Product;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;
@Repository
public interface ProductRepository extends JpaRepository<Product, Long>, JpaSpecificationExecutor<Product> {
    @Query(value = "SELECT COALESCE(MAX(product_id), 0) FROM product", nativeQuery = true)
    Long getLastProductId();

    @Query("SELECT u from Product u WHERE u.productId = ?1")
    Optional<Product> findById(Long id);

    List<Product> findByProductIdIn(List<Long> ids);

    @Query("SELECT CASE WHEN EXISTS (SELECT 1 FROM Product u WHERE u.productId = :id) THEN true ELSE false END")
    boolean existsById(Long id);

    //true neu ton tai va false neu khong ton tai
    @Query("SELECT CASE WHEN EXISTS (SELECT 1 FROM Product u WHERE u.productName = :name ) THEN true ELSE false END")
    boolean existsByName(String name);
}
